[
  {
    "path": "posts/2021-09-13-tidy-tuesday-1/",
    "title": "Tidy Tuesday 2",
    "description": "First Assignment Tidy Tuesday",
    "author": [
      {
        "name": "Ethan Deutsch",
        "url": {}
      }
    ],
    "date": "2021-09-21",
    "categories": [],
    "contents": "\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidytuesdayR)\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(rvest)\n\n\n\n\n\ntuesdata <- tidytuesdayR::tt_load(2021, week = 39)\n\n\n\n    Downloading file 1 of 1: `nominees.csv`\n\nnominees <- tuesdata$nominees\n\n\n\n\n\nnominees %>%\n  select(-c(logo, page, page_id)) %>%\n  filter(distributor == c(\"Netflix\", \"Hulu\", \"HBO\", \"CBS\", \"Prime Video\", \"Disney+\", \"NBC\", \"ABC\", \"VH1\", \"FX Networks\")) %>% #Top 10 Distributor Nominees since 2018\n  filter(year >= 2018) %>%\n  filter(type == \"Nominee\") %>%\n  ggplot(aes(x = distributor)) +\n  geom_bar()\n\n\n\n\n\n\nnominees %>%\n  select(-c(logo, page, page_id)) %>%\n  filter(year >= 2018) %>%\n  filter(type == \"Nominee\") %>%\n  filter(distributor == c(\"Netflix\", \"NBC\", \"HBO\", \"ABC\", \"CBS\")) %>% # Top 5 Nominees\n  group_by(distributor, year) %>%\n  count(distributor) %>%\n  ggplot(aes(x = year, y = n, color = distributor)) +\n  labs(title = \"Emmy Nominations by TV Distributor since 2018 (Top 5 only)\", x = \"Year\", y = \"Number of Nominations\", color = \"TV Distributor\") +\n  geom_line() +\n  geom_point()\n\n\n\nnominees %>%\n  select(-c(logo, page, page_id)) %>%\n  filter(year >= 2018) %>%\n  filter(type == \"Nominee\") %>%\n  filter(distributor == c(\"Disney+\", \"Hulu\", \"FX Networks\", \"VH1\", \"Prime Video\")) %>% # Top 5-10 Nominees\n  group_by(distributor, year) %>%\n  count(distributor) %>%\n  ggplot(aes(x = year, y = n, color = distributor)) +\n  labs(title = \"Emmy Nominations by TV Distributor since 2018 (Top 6-10 only)\", x = \"Year\", y = \"Number of Nominations\", color = \"TV Distributor\") +\n  geom_line() +\n  geom_point()\n\n\n\n\n\n\nnominees %>%\n  select(-c(logo, page, page_id)) %>%\n  filter(year >= 2018) %>%\n  filter(type == \"Winner\") %>%\n  filter(distributor == c(\"Netflix\", \"NBC\", \"HBO\", \"ABC\", \"CBS\")) %>% # Top 5 Nominees Since 2018\n  group_by(distributor, year) %>%\n  count(distributor) %>%\n  ggplot(aes(x = year, y = n, color = distributor)) +\n  labs(title = \"Emmy Wins by TV Distributor since 2018 (Top 5 only)\", x = \"Year\", y = \"Number of Wins\", color = \"TV Distributor\") +\n  geom_line() +\n  geom_point()\n\n\n\nnominees %>%\n  select(-c(logo, page, page_id)) %>%\n  filter(year >= 2018) %>%\n  filter(type == \"Winner\") %>%\n  filter(distributor == c(\"Disney+\", \"Hulu\", \"FX Networks\", \"VH1\", \"Prime Video\")) %>% # Top 5-10 Nominees Since 2018\n  group_by(distributor, year) %>%\n  count(distributor) %>%\n  ggplot(aes(x = year, y = n, color = distributor)) +\n  labs(title = \"Emmy Wins by TV Distributor since 2018 (Top 6-10 only)\", x = \"Year\", y = \"Number of Wins\", color = \"TV Distributor\") +\n  geom_line() +\n  geom_point()\n\n\n\n\n\n\nnominees %>%\n  select(-c(logo, page, page_id)) %>%\n  filter(distributor == c(\"Netflix\", \"Hulu\", \"HBO\", \"CBS\", \"Prime Video\", \"Disney+\", \"NBC\", \"ABC\", \"VH1\", \"FX Networks\")) %>% #Top 10 Distributor Nominees since 2018\n  filter(year >= 2018) %>%\n  filter(type == \"Nominee\") %>%\n  ggplot(aes(x = year, fill = distributor)) +\n  labs(title = \"Emmy Nominations Each Year by TV Distributor\", x = \"Year\", y = \"Number of Nominations\", fill = \"TV Distributor\") +\n  geom_bar()\n\n\n\nnominees %>%\n  select(-c(logo, page, page_id)) %>%\n  filter(distributor == c(\"Netflix\", \"Hulu\", \"HBO\", \"CBS\", \"Prime Video\", \"Disney+\", \"NBC\", \"ABC\", \"VH1\", \"FX Networks\")) %>% #Top 10 Distributor Nominees since 2018\n  filter(year >= 2018) %>%\n  filter(type == \"Winner\") %>%\n  ggplot(aes(x = year, fill = distributor)) +\n  labs(title = \"Emmy Wins Each Year by TV Distributor\", x = \"Year\", y = \"Number of Wins\", fill = \"TV Distributor\") +\n  geom_bar()\n\n\n\n\n\n\nnomswinners <- nominees %>% # Top Distributor Nominations by Year\n  select(-c(logo, page, page_id)) %>%\n  filter(year >= 2018) %>%\n  group_by(distributor, year, type) %>%\n  count() %>%\n  pivot_wider(names_from = type, values_from = n, values_fill = 0) %>%\n  mutate(win_ratio = Winner/(Nominee+Winner))\n\nnomswinners %>% \n  filter(distributor %in% c(\"Netflix\", \"Hulu\", \"HBO\", \"CBS\", \"Prime Video\", \"Disney+\", \"NBC\", \"ABC\", \"VH1\", \"FX Networks\")) %>%\n  ggplot(aes(x = win_ratio, y = distributor, color = as.factor(year))) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Emmy Win Rate by TV Distributor\", x = \"Win Rate\", y = \"TV Distributor\", color = \"Year\") +\n  scale_color_manual(values = c(\"green1\", \"cyan\", \"darkorchid1\", \"deeppink\"))\n\n\n\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": "posts/2021-09-13-tidy-tuesday-1/distill-preview.png",
    "last_modified": "2021-09-22T14:45:32-05:00",
    "input_file": "tidy-tuesday-1.knit.md"
  }
]
